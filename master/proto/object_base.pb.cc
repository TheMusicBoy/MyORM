// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: object_base.proto

#include "object_base.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace orm {
PROTOBUF_CONSTEXPR ObjectTypeOptions::ObjectTypeOptions(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.camel_case_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.snake_case_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.custom_type_handler_)*/false
  , /*decltype(_impl_.type_value_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ObjectTypeOptionsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ObjectTypeOptionsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ObjectTypeOptionsDefaultTypeInternal() {}
  union {
    ObjectTypeOptions _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ObjectTypeOptionsDefaultTypeInternal _ObjectTypeOptions_default_instance_;
PROTOBUF_CONSTEXPR FieldOptions::FieldOptions(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.storage_type_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.generation_policy_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct FieldOptionsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FieldOptionsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FieldOptionsDefaultTypeInternal() {}
  union {
    FieldOptions _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FieldOptionsDefaultTypeInternal _FieldOptions_default_instance_;
PROTOBUF_CONSTEXPR ObjectMeta_ACLEntry::ObjectMeta_ACLEntry(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.principal_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.permission_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ObjectMeta_ACLEntryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ObjectMeta_ACLEntryDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ObjectMeta_ACLEntryDefaultTypeInternal() {}
  union {
    ObjectMeta_ACLEntry _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ObjectMeta_ACLEntryDefaultTypeInternal _ObjectMeta_ACLEntry_default_instance_;
PROTOBUF_CONSTEXPR ObjectMeta::ObjectMeta(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.acl_)*/{}
  , /*decltype(_impl_.id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.parent_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.parent_type_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.created_by_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.updated_by_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.version_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.created_at_)*/int64_t{0}
  , /*decltype(_impl_.updated_at_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ObjectMetaDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ObjectMetaDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ObjectMetaDefaultTypeInternal() {}
  union {
    ObjectMeta _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ObjectMetaDefaultTypeInternal _ObjectMeta_default_instance_;
}  // namespace orm
static ::_pb::Metadata file_level_metadata_object_5fbase_2eproto[4];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_object_5fbase_2eproto[2];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_object_5fbase_2eproto = nullptr;

const uint32_t TableStruct_object_5fbase_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::orm::ObjectTypeOptions, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::orm::ObjectTypeOptions, _impl_.camel_case_name_),
  PROTOBUF_FIELD_OFFSET(::orm::ObjectTypeOptions, _impl_.snake_case_name_),
  PROTOBUF_FIELD_OFFSET(::orm::ObjectTypeOptions, _impl_.custom_type_handler_),
  PROTOBUF_FIELD_OFFSET(::orm::ObjectTypeOptions, _impl_.type_value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::orm::FieldOptions, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::orm::FieldOptions, _impl_.generation_policy_),
  PROTOBUF_FIELD_OFFSET(::orm::FieldOptions, _impl_.storage_type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::orm::ObjectMeta_ACLEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::orm::ObjectMeta_ACLEntry, _impl_.principal_),
  PROTOBUF_FIELD_OFFSET(::orm::ObjectMeta_ACLEntry, _impl_.permission_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::orm::ObjectMeta, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::orm::ObjectMeta, _impl_.id_),
  PROTOBUF_FIELD_OFFSET(::orm::ObjectMeta, _impl_.parent_id_),
  PROTOBUF_FIELD_OFFSET(::orm::ObjectMeta, _impl_.parent_type_),
  PROTOBUF_FIELD_OFFSET(::orm::ObjectMeta, _impl_.acl_),
  PROTOBUF_FIELD_OFFSET(::orm::ObjectMeta, _impl_.created_at_),
  PROTOBUF_FIELD_OFFSET(::orm::ObjectMeta, _impl_.updated_at_),
  PROTOBUF_FIELD_OFFSET(::orm::ObjectMeta, _impl_.created_by_),
  PROTOBUF_FIELD_OFFSET(::orm::ObjectMeta, _impl_.updated_by_),
  PROTOBUF_FIELD_OFFSET(::orm::ObjectMeta, _impl_.version_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::orm::ObjectTypeOptions)},
  { 10, -1, -1, sizeof(::orm::FieldOptions)},
  { 18, -1, -1, sizeof(::orm::ObjectMeta_ACLEntry)},
  { 26, -1, -1, sizeof(::orm::ObjectMeta)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::orm::_ObjectTypeOptions_default_instance_._instance,
  &::orm::_FieldOptions_default_instance_._instance,
  &::orm::_ObjectMeta_ACLEntry_default_instance_._instance,
  &::orm::_ObjectMeta_default_instance_._instance,
};

const char descriptor_table_protodef_object_5fbase_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\021object_base.proto\022\003orm\032 google/protobu"
  "f/descriptor.proto\"v\n\021ObjectTypeOptions\022"
  "\027\n\017camel_case_name\030\001 \001(\t\022\027\n\017snake_case_n"
  "ame\030\002 \001(\t\022\033\n\023custom_type_handler\030\004 \001(\010\022\022"
  "\n\ntype_value\030\005 \001(\005\"V\n\014FieldOptions\0220\n\021ge"
  "neration_policy\030\001 \001(\0162\025.orm.GenerationPo"
  "licy\022\024\n\014storage_type\030\002 \001(\t\"\331\002\n\nObjectMet"
  "a\022\n\n\002id\030\001 \001(\t\022\021\n\tparent_id\030\002 \001(\t\022\023\n\013pare"
  "nt_type\030\003 \001(\t\022%\n\003acl\030\004 \003(\0132\030.orm.ObjectM"
  "eta.ACLEntry\022\022\n\ncreated_at\030\005 \001(\003\022\022\n\nupda"
  "ted_at\030\006 \001(\003\022\022\n\ncreated_by\030\007 \001(\t\022\022\n\nupda"
  "ted_by\030\010 \001(\t\022\017\n\007version\030\t \001(\t\032\216\001\n\010ACLEnt"
  "ry\022\021\n\tprincipal\030\001 \001(\t\0227\n\npermission\030\002 \001("
  "\0162#.orm.ObjectMeta.ACLEntry.Permission\"6"
  "\n\nPermission\022\010\n\004NONE\020\000\022\010\n\004READ\020\001\022\t\n\005WRIT"
  "E\020\002\022\t\n\005ADMIN\020\003*.\n\020GenerationPolicy\022\013\n\007GP"
  "_AUTO\020\000\022\r\n\tGP_MANUAL\020\001:N\n\013object_type\022\037."
  "google.protobuf.MessageOptions\030\320\206\003 \001(\0132\026"
  ".orm.ObjectTypeOptions:I\n\rfield_options\022"
  "\035.google.protobuf.FieldOptions\030\321\206\003 \001(\0132\021"
  ".orm.FieldOptions:3\n\010in_place\022\037.google.p"
  "rotobuf.MessageOptions\030\322\206\003 \001(\010:=\n\022messag"
  "e_lock_group\022\037.google.protobuf.MessageOp"
  "tions\030\323\206\003 \001(\tb\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_object_5fbase_2eproto_deps[1] = {
  &::descriptor_table_google_2fprotobuf_2fdescriptor_2eproto,
};
static ::_pbi::once_flag descriptor_table_object_5fbase_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_object_5fbase_2eproto = {
    false, false, 941, descriptor_table_protodef_object_5fbase_2eproto,
    "object_base.proto",
    &descriptor_table_object_5fbase_2eproto_once, descriptor_table_object_5fbase_2eproto_deps, 1, 4,
    schemas, file_default_instances, TableStruct_object_5fbase_2eproto::offsets,
    file_level_metadata_object_5fbase_2eproto, file_level_enum_descriptors_object_5fbase_2eproto,
    file_level_service_descriptors_object_5fbase_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_object_5fbase_2eproto_getter() {
  return &descriptor_table_object_5fbase_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_object_5fbase_2eproto(&descriptor_table_object_5fbase_2eproto);
namespace orm {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ObjectMeta_ACLEntry_Permission_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_object_5fbase_2eproto);
  return file_level_enum_descriptors_object_5fbase_2eproto[0];
}
bool ObjectMeta_ACLEntry_Permission_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr ObjectMeta_ACLEntry_Permission ObjectMeta_ACLEntry::NONE;
constexpr ObjectMeta_ACLEntry_Permission ObjectMeta_ACLEntry::READ;
constexpr ObjectMeta_ACLEntry_Permission ObjectMeta_ACLEntry::WRITE;
constexpr ObjectMeta_ACLEntry_Permission ObjectMeta_ACLEntry::ADMIN;
constexpr ObjectMeta_ACLEntry_Permission ObjectMeta_ACLEntry::Permission_MIN;
constexpr ObjectMeta_ACLEntry_Permission ObjectMeta_ACLEntry::Permission_MAX;
constexpr int ObjectMeta_ACLEntry::Permission_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* GenerationPolicy_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_object_5fbase_2eproto);
  return file_level_enum_descriptors_object_5fbase_2eproto[1];
}
bool GenerationPolicy_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class ObjectTypeOptions::_Internal {
 public:
};

ObjectTypeOptions::ObjectTypeOptions(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:orm.ObjectTypeOptions)
}
ObjectTypeOptions::ObjectTypeOptions(const ObjectTypeOptions& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ObjectTypeOptions* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.camel_case_name_){}
    , decltype(_impl_.snake_case_name_){}
    , decltype(_impl_.custom_type_handler_){}
    , decltype(_impl_.type_value_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.camel_case_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.camel_case_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_camel_case_name().empty()) {
    _this->_impl_.camel_case_name_.Set(from._internal_camel_case_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.snake_case_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.snake_case_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_snake_case_name().empty()) {
    _this->_impl_.snake_case_name_.Set(from._internal_snake_case_name(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.custom_type_handler_, &from._impl_.custom_type_handler_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.type_value_) -
    reinterpret_cast<char*>(&_impl_.custom_type_handler_)) + sizeof(_impl_.type_value_));
  // @@protoc_insertion_point(copy_constructor:orm.ObjectTypeOptions)
}

inline void ObjectTypeOptions::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.camel_case_name_){}
    , decltype(_impl_.snake_case_name_){}
    , decltype(_impl_.custom_type_handler_){false}
    , decltype(_impl_.type_value_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.camel_case_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.camel_case_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.snake_case_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.snake_case_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ObjectTypeOptions::~ObjectTypeOptions() {
  // @@protoc_insertion_point(destructor:orm.ObjectTypeOptions)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ObjectTypeOptions::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.camel_case_name_.Destroy();
  _impl_.snake_case_name_.Destroy();
}

void ObjectTypeOptions::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ObjectTypeOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:orm.ObjectTypeOptions)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.camel_case_name_.ClearToEmpty();
  _impl_.snake_case_name_.ClearToEmpty();
  ::memset(&_impl_.custom_type_handler_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.type_value_) -
      reinterpret_cast<char*>(&_impl_.custom_type_handler_)) + sizeof(_impl_.type_value_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ObjectTypeOptions::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string camel_case_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_camel_case_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "orm.ObjectTypeOptions.camel_case_name"));
        } else
          goto handle_unusual;
        continue;
      // string snake_case_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_snake_case_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "orm.ObjectTypeOptions.snake_case_name"));
        } else
          goto handle_unusual;
        continue;
      // bool custom_type_handler = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.custom_type_handler_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 type_value = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _impl_.type_value_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ObjectTypeOptions::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:orm.ObjectTypeOptions)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string camel_case_name = 1;
  if (!this->_internal_camel_case_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_camel_case_name().data(), static_cast<int>(this->_internal_camel_case_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "orm.ObjectTypeOptions.camel_case_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_camel_case_name(), target);
  }

  // string snake_case_name = 2;
  if (!this->_internal_snake_case_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_snake_case_name().data(), static_cast<int>(this->_internal_snake_case_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "orm.ObjectTypeOptions.snake_case_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_snake_case_name(), target);
  }

  // bool custom_type_handler = 4;
  if (this->_internal_custom_type_handler() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(4, this->_internal_custom_type_handler(), target);
  }

  // int32 type_value = 5;
  if (this->_internal_type_value() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(5, this->_internal_type_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:orm.ObjectTypeOptions)
  return target;
}

size_t ObjectTypeOptions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:orm.ObjectTypeOptions)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string camel_case_name = 1;
  if (!this->_internal_camel_case_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_camel_case_name());
  }

  // string snake_case_name = 2;
  if (!this->_internal_snake_case_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_snake_case_name());
  }

  // bool custom_type_handler = 4;
  if (this->_internal_custom_type_handler() != 0) {
    total_size += 1 + 1;
  }

  // int32 type_value = 5;
  if (this->_internal_type_value() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_type_value());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ObjectTypeOptions::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ObjectTypeOptions::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ObjectTypeOptions::GetClassData() const { return &_class_data_; }


void ObjectTypeOptions::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ObjectTypeOptions*>(&to_msg);
  auto& from = static_cast<const ObjectTypeOptions&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:orm.ObjectTypeOptions)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_camel_case_name().empty()) {
    _this->_internal_set_camel_case_name(from._internal_camel_case_name());
  }
  if (!from._internal_snake_case_name().empty()) {
    _this->_internal_set_snake_case_name(from._internal_snake_case_name());
  }
  if (from._internal_custom_type_handler() != 0) {
    _this->_internal_set_custom_type_handler(from._internal_custom_type_handler());
  }
  if (from._internal_type_value() != 0) {
    _this->_internal_set_type_value(from._internal_type_value());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ObjectTypeOptions::CopyFrom(const ObjectTypeOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:orm.ObjectTypeOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectTypeOptions::IsInitialized() const {
  return true;
}

void ObjectTypeOptions::InternalSwap(ObjectTypeOptions* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.camel_case_name_, lhs_arena,
      &other->_impl_.camel_case_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.snake_case_name_, lhs_arena,
      &other->_impl_.snake_case_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ObjectTypeOptions, _impl_.type_value_)
      + sizeof(ObjectTypeOptions::_impl_.type_value_)
      - PROTOBUF_FIELD_OFFSET(ObjectTypeOptions, _impl_.custom_type_handler_)>(
          reinterpret_cast<char*>(&_impl_.custom_type_handler_),
          reinterpret_cast<char*>(&other->_impl_.custom_type_handler_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ObjectTypeOptions::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_object_5fbase_2eproto_getter, &descriptor_table_object_5fbase_2eproto_once,
      file_level_metadata_object_5fbase_2eproto[0]);
}

// ===================================================================

class FieldOptions::_Internal {
 public:
};

FieldOptions::FieldOptions(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:orm.FieldOptions)
}
FieldOptions::FieldOptions(const FieldOptions& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  FieldOptions* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.storage_type_){}
    , decltype(_impl_.generation_policy_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.storage_type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.storage_type_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_storage_type().empty()) {
    _this->_impl_.storage_type_.Set(from._internal_storage_type(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.generation_policy_ = from._impl_.generation_policy_;
  // @@protoc_insertion_point(copy_constructor:orm.FieldOptions)
}

inline void FieldOptions::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.storage_type_){}
    , decltype(_impl_.generation_policy_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.storage_type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.storage_type_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

FieldOptions::~FieldOptions() {
  // @@protoc_insertion_point(destructor:orm.FieldOptions)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FieldOptions::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.storage_type_.Destroy();
}

void FieldOptions::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void FieldOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:orm.FieldOptions)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.storage_type_.ClearToEmpty();
  _impl_.generation_policy_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FieldOptions::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .orm.GenerationPolicy generation_policy = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_generation_policy(static_cast<::orm::GenerationPolicy>(val));
        } else
          goto handle_unusual;
        continue;
      // string storage_type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_storage_type();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "orm.FieldOptions.storage_type"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FieldOptions::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:orm.FieldOptions)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .orm.GenerationPolicy generation_policy = 1;
  if (this->_internal_generation_policy() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_generation_policy(), target);
  }

  // string storage_type = 2;
  if (!this->_internal_storage_type().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_storage_type().data(), static_cast<int>(this->_internal_storage_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "orm.FieldOptions.storage_type");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_storage_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:orm.FieldOptions)
  return target;
}

size_t FieldOptions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:orm.FieldOptions)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string storage_type = 2;
  if (!this->_internal_storage_type().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_storage_type());
  }

  // .orm.GenerationPolicy generation_policy = 1;
  if (this->_internal_generation_policy() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_generation_policy());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FieldOptions::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    FieldOptions::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FieldOptions::GetClassData() const { return &_class_data_; }


void FieldOptions::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<FieldOptions*>(&to_msg);
  auto& from = static_cast<const FieldOptions&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:orm.FieldOptions)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_storage_type().empty()) {
    _this->_internal_set_storage_type(from._internal_storage_type());
  }
  if (from._internal_generation_policy() != 0) {
    _this->_internal_set_generation_policy(from._internal_generation_policy());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FieldOptions::CopyFrom(const FieldOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:orm.FieldOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FieldOptions::IsInitialized() const {
  return true;
}

void FieldOptions::InternalSwap(FieldOptions* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.storage_type_, lhs_arena,
      &other->_impl_.storage_type_, rhs_arena
  );
  swap(_impl_.generation_policy_, other->_impl_.generation_policy_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FieldOptions::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_object_5fbase_2eproto_getter, &descriptor_table_object_5fbase_2eproto_once,
      file_level_metadata_object_5fbase_2eproto[1]);
}

// ===================================================================

class ObjectMeta_ACLEntry::_Internal {
 public:
};

ObjectMeta_ACLEntry::ObjectMeta_ACLEntry(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:orm.ObjectMeta.ACLEntry)
}
ObjectMeta_ACLEntry::ObjectMeta_ACLEntry(const ObjectMeta_ACLEntry& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ObjectMeta_ACLEntry* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.principal_){}
    , decltype(_impl_.permission_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.principal_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.principal_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_principal().empty()) {
    _this->_impl_.principal_.Set(from._internal_principal(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.permission_ = from._impl_.permission_;
  // @@protoc_insertion_point(copy_constructor:orm.ObjectMeta.ACLEntry)
}

inline void ObjectMeta_ACLEntry::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.principal_){}
    , decltype(_impl_.permission_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.principal_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.principal_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ObjectMeta_ACLEntry::~ObjectMeta_ACLEntry() {
  // @@protoc_insertion_point(destructor:orm.ObjectMeta.ACLEntry)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ObjectMeta_ACLEntry::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.principal_.Destroy();
}

void ObjectMeta_ACLEntry::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ObjectMeta_ACLEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:orm.ObjectMeta.ACLEntry)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.principal_.ClearToEmpty();
  _impl_.permission_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ObjectMeta_ACLEntry::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string principal = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_principal();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "orm.ObjectMeta.ACLEntry.principal"));
        } else
          goto handle_unusual;
        continue;
      // .orm.ObjectMeta.ACLEntry.Permission permission = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_permission(static_cast<::orm::ObjectMeta_ACLEntry_Permission>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ObjectMeta_ACLEntry::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:orm.ObjectMeta.ACLEntry)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string principal = 1;
  if (!this->_internal_principal().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_principal().data(), static_cast<int>(this->_internal_principal().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "orm.ObjectMeta.ACLEntry.principal");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_principal(), target);
  }

  // .orm.ObjectMeta.ACLEntry.Permission permission = 2;
  if (this->_internal_permission() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_permission(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:orm.ObjectMeta.ACLEntry)
  return target;
}

size_t ObjectMeta_ACLEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:orm.ObjectMeta.ACLEntry)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string principal = 1;
  if (!this->_internal_principal().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_principal());
  }

  // .orm.ObjectMeta.ACLEntry.Permission permission = 2;
  if (this->_internal_permission() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_permission());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ObjectMeta_ACLEntry::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ObjectMeta_ACLEntry::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ObjectMeta_ACLEntry::GetClassData() const { return &_class_data_; }


void ObjectMeta_ACLEntry::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ObjectMeta_ACLEntry*>(&to_msg);
  auto& from = static_cast<const ObjectMeta_ACLEntry&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:orm.ObjectMeta.ACLEntry)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_principal().empty()) {
    _this->_internal_set_principal(from._internal_principal());
  }
  if (from._internal_permission() != 0) {
    _this->_internal_set_permission(from._internal_permission());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ObjectMeta_ACLEntry::CopyFrom(const ObjectMeta_ACLEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:orm.ObjectMeta.ACLEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectMeta_ACLEntry::IsInitialized() const {
  return true;
}

void ObjectMeta_ACLEntry::InternalSwap(ObjectMeta_ACLEntry* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.principal_, lhs_arena,
      &other->_impl_.principal_, rhs_arena
  );
  swap(_impl_.permission_, other->_impl_.permission_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ObjectMeta_ACLEntry::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_object_5fbase_2eproto_getter, &descriptor_table_object_5fbase_2eproto_once,
      file_level_metadata_object_5fbase_2eproto[2]);
}

// ===================================================================

class ObjectMeta::_Internal {
 public:
};

ObjectMeta::ObjectMeta(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:orm.ObjectMeta)
}
ObjectMeta::ObjectMeta(const ObjectMeta& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ObjectMeta* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.acl_){from._impl_.acl_}
    , decltype(_impl_.id_){}
    , decltype(_impl_.parent_id_){}
    , decltype(_impl_.parent_type_){}
    , decltype(_impl_.created_by_){}
    , decltype(_impl_.updated_by_){}
    , decltype(_impl_.version_){}
    , decltype(_impl_.created_at_){}
    , decltype(_impl_.updated_at_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    _this->_impl_.id_.Set(from._internal_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.parent_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.parent_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_parent_id().empty()) {
    _this->_impl_.parent_id_.Set(from._internal_parent_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.parent_type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.parent_type_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_parent_type().empty()) {
    _this->_impl_.parent_type_.Set(from._internal_parent_type(), 
      _this->GetArenaForAllocation());
  }
  _impl_.created_by_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.created_by_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_created_by().empty()) {
    _this->_impl_.created_by_.Set(from._internal_created_by(), 
      _this->GetArenaForAllocation());
  }
  _impl_.updated_by_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.updated_by_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_updated_by().empty()) {
    _this->_impl_.updated_by_.Set(from._internal_updated_by(), 
      _this->GetArenaForAllocation());
  }
  _impl_.version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_version().empty()) {
    _this->_impl_.version_.Set(from._internal_version(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.created_at_, &from._impl_.created_at_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.updated_at_) -
    reinterpret_cast<char*>(&_impl_.created_at_)) + sizeof(_impl_.updated_at_));
  // @@protoc_insertion_point(copy_constructor:orm.ObjectMeta)
}

inline void ObjectMeta::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.acl_){arena}
    , decltype(_impl_.id_){}
    , decltype(_impl_.parent_id_){}
    , decltype(_impl_.parent_type_){}
    , decltype(_impl_.created_by_){}
    , decltype(_impl_.updated_by_){}
    , decltype(_impl_.version_){}
    , decltype(_impl_.created_at_){int64_t{0}}
    , decltype(_impl_.updated_at_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.parent_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.parent_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.parent_type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.parent_type_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.created_by_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.created_by_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.updated_by_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.updated_by_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ObjectMeta::~ObjectMeta() {
  // @@protoc_insertion_point(destructor:orm.ObjectMeta)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ObjectMeta::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.acl_.~RepeatedPtrField();
  _impl_.id_.Destroy();
  _impl_.parent_id_.Destroy();
  _impl_.parent_type_.Destroy();
  _impl_.created_by_.Destroy();
  _impl_.updated_by_.Destroy();
  _impl_.version_.Destroy();
}

void ObjectMeta::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ObjectMeta::Clear() {
// @@protoc_insertion_point(message_clear_start:orm.ObjectMeta)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.acl_.Clear();
  _impl_.id_.ClearToEmpty();
  _impl_.parent_id_.ClearToEmpty();
  _impl_.parent_type_.ClearToEmpty();
  _impl_.created_by_.ClearToEmpty();
  _impl_.updated_by_.ClearToEmpty();
  _impl_.version_.ClearToEmpty();
  ::memset(&_impl_.created_at_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.updated_at_) -
      reinterpret_cast<char*>(&_impl_.created_at_)) + sizeof(_impl_.updated_at_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ObjectMeta::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "orm.ObjectMeta.id"));
        } else
          goto handle_unusual;
        continue;
      // string parent_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_parent_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "orm.ObjectMeta.parent_id"));
        } else
          goto handle_unusual;
        continue;
      // string parent_type = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_parent_type();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "orm.ObjectMeta.parent_type"));
        } else
          goto handle_unusual;
        continue;
      // repeated .orm.ObjectMeta.ACLEntry acl = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_acl(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      // int64 created_at = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _impl_.created_at_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 updated_at = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _impl_.updated_at_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string created_by = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          auto str = _internal_mutable_created_by();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "orm.ObjectMeta.created_by"));
        } else
          goto handle_unusual;
        continue;
      // string updated_by = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          auto str = _internal_mutable_updated_by();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "orm.ObjectMeta.updated_by"));
        } else
          goto handle_unusual;
        continue;
      // string version = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          auto str = _internal_mutable_version();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "orm.ObjectMeta.version"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ObjectMeta::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:orm.ObjectMeta)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "orm.ObjectMeta.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string parent_id = 2;
  if (!this->_internal_parent_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_parent_id().data(), static_cast<int>(this->_internal_parent_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "orm.ObjectMeta.parent_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_parent_id(), target);
  }

  // string parent_type = 3;
  if (!this->_internal_parent_type().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_parent_type().data(), static_cast<int>(this->_internal_parent_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "orm.ObjectMeta.parent_type");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_parent_type(), target);
  }

  // repeated .orm.ObjectMeta.ACLEntry acl = 4;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_acl_size()); i < n; i++) {
    const auto& repfield = this->_internal_acl(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(4, repfield, repfield.GetCachedSize(), target, stream);
  }

  // int64 created_at = 5;
  if (this->_internal_created_at() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(5, this->_internal_created_at(), target);
  }

  // int64 updated_at = 6;
  if (this->_internal_updated_at() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(6, this->_internal_updated_at(), target);
  }

  // string created_by = 7;
  if (!this->_internal_created_by().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_created_by().data(), static_cast<int>(this->_internal_created_by().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "orm.ObjectMeta.created_by");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_created_by(), target);
  }

  // string updated_by = 8;
  if (!this->_internal_updated_by().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_updated_by().data(), static_cast<int>(this->_internal_updated_by().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "orm.ObjectMeta.updated_by");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_updated_by(), target);
  }

  // string version = 9;
  if (!this->_internal_version().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_version().data(), static_cast<int>(this->_internal_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "orm.ObjectMeta.version");
    target = stream->WriteStringMaybeAliased(
        9, this->_internal_version(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:orm.ObjectMeta)
  return target;
}

size_t ObjectMeta::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:orm.ObjectMeta)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .orm.ObjectMeta.ACLEntry acl = 4;
  total_size += 1UL * this->_internal_acl_size();
  for (const auto& msg : this->_impl_.acl_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string id = 1;
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string parent_id = 2;
  if (!this->_internal_parent_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_parent_id());
  }

  // string parent_type = 3;
  if (!this->_internal_parent_type().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_parent_type());
  }

  // string created_by = 7;
  if (!this->_internal_created_by().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_created_by());
  }

  // string updated_by = 8;
  if (!this->_internal_updated_by().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_updated_by());
  }

  // string version = 9;
  if (!this->_internal_version().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_version());
  }

  // int64 created_at = 5;
  if (this->_internal_created_at() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_created_at());
  }

  // int64 updated_at = 6;
  if (this->_internal_updated_at() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_updated_at());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ObjectMeta::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ObjectMeta::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ObjectMeta::GetClassData() const { return &_class_data_; }


void ObjectMeta::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ObjectMeta*>(&to_msg);
  auto& from = static_cast<const ObjectMeta&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:orm.ObjectMeta)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.acl_.MergeFrom(from._impl_.acl_);
  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  if (!from._internal_parent_id().empty()) {
    _this->_internal_set_parent_id(from._internal_parent_id());
  }
  if (!from._internal_parent_type().empty()) {
    _this->_internal_set_parent_type(from._internal_parent_type());
  }
  if (!from._internal_created_by().empty()) {
    _this->_internal_set_created_by(from._internal_created_by());
  }
  if (!from._internal_updated_by().empty()) {
    _this->_internal_set_updated_by(from._internal_updated_by());
  }
  if (!from._internal_version().empty()) {
    _this->_internal_set_version(from._internal_version());
  }
  if (from._internal_created_at() != 0) {
    _this->_internal_set_created_at(from._internal_created_at());
  }
  if (from._internal_updated_at() != 0) {
    _this->_internal_set_updated_at(from._internal_updated_at());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ObjectMeta::CopyFrom(const ObjectMeta& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:orm.ObjectMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectMeta::IsInitialized() const {
  return true;
}

void ObjectMeta::InternalSwap(ObjectMeta* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.acl_.InternalSwap(&other->_impl_.acl_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.id_, lhs_arena,
      &other->_impl_.id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.parent_id_, lhs_arena,
      &other->_impl_.parent_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.parent_type_, lhs_arena,
      &other->_impl_.parent_type_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.created_by_, lhs_arena,
      &other->_impl_.created_by_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.updated_by_, lhs_arena,
      &other->_impl_.updated_by_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.version_, lhs_arena,
      &other->_impl_.version_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ObjectMeta, _impl_.updated_at_)
      + sizeof(ObjectMeta::_impl_.updated_at_)
      - PROTOBUF_FIELD_OFFSET(ObjectMeta, _impl_.created_at_)>(
          reinterpret_cast<char*>(&_impl_.created_at_),
          reinterpret_cast<char*>(&other->_impl_.created_at_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ObjectMeta::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_object_5fbase_2eproto_getter, &descriptor_table_object_5fbase_2eproto_once,
      file_level_metadata_object_5fbase_2eproto[3]);
}
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::PROTOBUF_NAMESPACE_ID::MessageOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::MessageTypeTraits< ::orm::ObjectTypeOptions >, 11, false>
  object_type(kObjectTypeFieldNumber, ::orm::ObjectTypeOptions::default_instance(), nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::PROTOBUF_NAMESPACE_ID::FieldOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::MessageTypeTraits< ::orm::FieldOptions >, 11, false>
  field_options(kFieldOptionsFieldNumber, ::orm::FieldOptions::default_instance(), nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::PROTOBUF_NAMESPACE_ID::MessageOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::PrimitiveTypeTraits< bool >, 8, false>
  in_place(kInPlaceFieldNumber, false, nullptr);
const std::string message_lock_group_default("");
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::PROTOBUF_NAMESPACE_ID::MessageOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::StringTypeTraits, 9, false>
  message_lock_group(kMessageLockGroupFieldNumber, message_lock_group_default, nullptr);

// @@protoc_insertion_point(namespace_scope)
}  // namespace orm
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::orm::ObjectTypeOptions*
Arena::CreateMaybeMessage< ::orm::ObjectTypeOptions >(Arena* arena) {
  return Arena::CreateMessageInternal< ::orm::ObjectTypeOptions >(arena);
}
template<> PROTOBUF_NOINLINE ::orm::FieldOptions*
Arena::CreateMaybeMessage< ::orm::FieldOptions >(Arena* arena) {
  return Arena::CreateMessageInternal< ::orm::FieldOptions >(arena);
}
template<> PROTOBUF_NOINLINE ::orm::ObjectMeta_ACLEntry*
Arena::CreateMaybeMessage< ::orm::ObjectMeta_ACLEntry >(Arena* arena) {
  return Arena::CreateMessageInternal< ::orm::ObjectMeta_ACLEntry >(arena);
}
template<> PROTOBUF_NOINLINE ::orm::ObjectMeta*
Arena::CreateMaybeMessage< ::orm::ObjectMeta >(Arena* arena) {
  return Arena::CreateMessageInternal< ::orm::ObjectMeta >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
